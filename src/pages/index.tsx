import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import FightCollapser from "~/components/FightCollapser";

import { api } from "~/utils/api";

export default function Home() {
  const [logUrl, setLogUrl] = useState("");
  const logData = api.post.getLogData.useQuery({logUrl: logUrl}, {enabled: false});
  const phaseInfo = api.post.getFightPhaseInfo.useQuery();
  const phaseFightTimelines = api.post.getPhaseFightTimelines.useQuery();
  const phaseMitTimelines = api.post.getPhaseMitTimelines.useQuery();

  const fightCollapserProps = {phaseInfo: phaseInfo.data, phaseFightTimelines: phaseFightTimelines.data}

  return (
    <>
      <Head>
        <title>Mit Checker</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <form className="relative w-3/5" 
            onSubmit={(event) => {
              event.preventDefault();
              logData.refetch();
            }}
          >
            <div>
              <input 
                type="text" 
                name="logUrl"
                className="input input-bordered w-full" 
                placeholder="FFLogs URL" 
                value={logUrl}
                onChange={(e) => setLogUrl(e.target.value)}
                required
              />
              <button type="submit" className="btn btn-primary btn-sm absolute end-2.5 bottom-2.5">Get Log</button>
            </div>
          </form>
          <p className="text-2xl text-white">
            {logData.data ? logData.data.url : "Loading..."}
          </p>
          <div className="w-full">
            {logData.data?.fightData && phaseInfo?.data && phaseFightTimelines?.data && phaseMitTimelines?.data ? 
              <FightCollapser props={{phaseInfo: phaseInfo.data, phaseFightTimelines: phaseFightTimelines.data, phaseMitTimelines: phaseMitTimelines.data, logData: logData.data}} /> : "Loading..."}
          </div>
        </div>
      </main>
    </>
  );
}
